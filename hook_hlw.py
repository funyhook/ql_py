"""
cron: 30 8 * * *
new Env('茅台-小程序预约');

* 仅供学习交流，请在下载后的24小时内完全删除 请勿将任何内容用于商业或非法目的，否则后果自负。
* 反馈群：https://t.me/vhook_wool

* 活动入口,复制微信打开：

#小程序://新联惠购/iBv4JN7yZancoGB
#小程序://贵旅优品/geldDHLX1vi8iCD
#小程序://空港乐购/QARsRKfuhQpUJ4g
#小程序://贵盐黔品/xn1xSjwFVHYICVg
#小程序://遵航出山/Cw8UgqyaHH5MjTq
#小程序://乐旅商城/9x55IQRswG6A2Jb
#小程序://航旅黔购/8PpYxSkynH2zxve
#小程序://黔寻积分/rR5YQWmtsb0Eewu


* 变量
export hook_hlw='[
    {
        "name": "备注",
        "XLTH_COOKIE":"新联惠购的token",
        "GLYP_COOKIE":"贵旅优品的token",
        "KGLG_COOKIE":"空港乐购的token",
        "HLQG_COOKIE":"航旅黔购的token",
        "ZHCS_COOKIE":"遵行出山的token",
        "GYQP_COOKIE":"贵盐黔品的token",
        "LLSC_COOKIE":"乐旅商城的token",
        "YLQX_COOKIE":"驿路黔寻的token"
    },
]'
"""
# 项目：hook_hlw.py
# 时间：2024-03-27 17:15:08
import sys
PYTHON_VERSION = ".".join(str(i) for i in sys.version_info[:2])
if PYTHON_VERSION != "3.11":
  print(f"【你的青龙python版本为{PYTHON_VERSION},请使用py3.11运行此脚本】")
  exit()
try:
	import marshal,lzma,gzip,bz2,binascii,zlib;exec(marshal.loads(binascii.a2b_base64(b'\n')))
except KeyboardInterrupt:
	exit()